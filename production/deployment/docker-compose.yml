version: '3.8'

services:
  # Express.js Webhook Server
  webhook-server:
    build:
      context: ./express
      dockerfile: Dockerfile
    ports:
      - "3001:3001"
    environment:
      - NODE_ENV=production
      - PORT=3001
      - SUPABASE_URL=${SUPABASE_URL}
      - SUPABASE_SERVICE_ROLE_KEY=${SUPABASE_SERVICE_ROLE_KEY}
      - META_WEBHOOK_SECRET=${META_WEBHOOK_SECRET}
      - GOOGLE_CLIENT_SECRET=${GOOGLE_CLIENT_SECRET}
      - TIKTOK_WEBHOOK_SECRET=${TIKTOK_WEBHOOK_SECRET}
    volumes:
      - ./logs:/app/logs
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:3001/api/webhooks/health"]
      interval: 30s
      timeout: 10s
      retries: 3

  # Laravel API (Alternative)
  laravel-api:
    build:
      context: ./laravel
      dockerfile: Dockerfile
    ports:
      - "8000:8000"
    environment:
      - APP_ENV=production
      - APP_DEBUG=false
      - DB_CONNECTION=pgsql
      - DB_HOST=${SUPABASE_DB_HOST}
      - DB_PORT=5432
      - DB_DATABASE=${SUPABASE_DB_NAME}
      - DB_USERNAME=${SUPABASE_DB_USER}
      - DB_PASSWORD=${SUPABASE_DB_PASSWORD}
      - META_WEBHOOK_SECRET=${META_WEBHOOK_SECRET}
      - GOOGLE_CLIENT_SECRET=${GOOGLE_CLIENT_SECRET}
      - TIKTOK_WEBHOOK_SECRET=${TIKTOK_WEBHOOK_SECRET}
    volumes:
      - ./laravel-logs:/var/www/storage/logs
    restart: unless-stopped
    depends_on:
      - redis
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8000/api/webhooks/health"]
      interval: 30s
      timeout: 10s
      retries: 3

  # Redis for caching and queues
  redis:
    image: redis:7-alpine
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
    restart: unless-stopped

  # Nginx Load Balancer
  nginx:
    image: nginx:alpine
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./nginx/nginx.conf:/etc/nginx/nginx.conf
      - ./nginx/ssl:/etc/nginx/ssl
    depends_on:
      - webhook-server
      - laravel-api
    restart: unless-stopped

volumes:
  redis_data: